{"version":3,"file":"static/js/961.c1257ea9.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/services/notificationService.js","pages/CEO_Dashboard/CEODashboardComponents/DataManagement.js"],"sourcesContent":["// Lightweight notification service stub for development\n// Stores outbound notifications in localStorage under `conseqx_notifications_outbox`\n\nconst OUTBOX_KEY = 'conseqx_notifications_outbox_v1';\n\nfunction readOutbox() {\n  try { const raw = localStorage.getItem(OUTBOX_KEY); return raw ? JSON.parse(raw) : []; } catch { return []; }\n}\n\nfunction writeOutbox(arr) {\n  try { localStorage.setItem(OUTBOX_KEY, JSON.stringify(arr)); } catch (e) {}\n}\n\nfunction sendEmail({ to, subject, body }) {\n  const out = readOutbox();\n  out.unshift({ id: `O-${Date.now().toString(36)}`, channel: 'email', to, subject, body, ts: Date.now() });\n  writeOutbox(out);\n  // emit event for UI\n  try { window.dispatchEvent(new CustomEvent('conseqx:notifications:outbox', { detail: { channel: 'email', to, subject } })); } catch (e) {}\n  return Promise.resolve({ ok: true });\n}\n\nfunction sendSMS({ to, body }) {\n  const out = readOutbox();\n  out.unshift({ id: `O-${Date.now().toString(36)}`, channel: 'sms', to, body, ts: Date.now() });\n  writeOutbox(out);\n  try { window.dispatchEvent(new CustomEvent('conseqx:notifications:outbox', { detail: { channel: 'sms', to } })); } catch (e) {}\n  return Promise.resolve({ ok: true });\n}\n\nfunction listOutbox() { return readOutbox(); }\n\nexport default { sendEmail, sendSMS, listOutbox };\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { FaUpload, FaFileCsv, FaFileAlt, FaSearch, FaTrash } from \"react-icons/fa\";\nimport * as svc from \"../services/serviceSelector\";\nimport notifier from \"../services/notificationService\";\n\nconst STORAGE_UPLOADS = \"conseqx_uploads_v1\";\nconst BINARY_EXTS = [\"docx\",\"pdf\",\"xlsx\",\"xls\",\"png\",\"jpg\",\"jpeg\",\"gif\",\"zip\",\"pptx\",\"ppt\"];\n\nconst STORAGE_REMINDERS = \"conseqx_reports_reminders_v3\";\n\nfunction readUploads() {\n  try {\n    const raw = localStorage.getItem(STORAGE_UPLOADS);\n    return raw ? JSON.parse(raw) : [];\n  } catch {\n    return [];\n  }\n}\n\nfunction writeUploads(arr) {\n  try {\n    const safe = (arr || []).map((u) => {\n      const copy = { ...u };\n      try { delete copy.objectUrl; } catch {}\n      return copy;\n    });\n    localStorage.setItem(STORAGE_UPLOADS, JSON.stringify(safe));\n  } catch {}\n}\n\nfunction readReminders() {\n  try {\n    const raw = localStorage.getItem(STORAGE_REMINDERS);\n    return raw ? JSON.parse(raw) : [];\n  } catch {\n    return [];\n  }\n}\n\nfunction writeReminders(arr) {\n  try {\n    localStorage.setItem(STORAGE_REMINDERS, JSON.stringify(arr));\n  } catch {}\n}\n\n/* tiny CSV fallback */\nfunction parseCSV(text) {\n  const lines = text.split(/\\r?\\n/).filter(Boolean);\n  if (lines.length === 0) return [];\n  const headers = lines[0].split(\",\").map((h) => h.trim());\n  return lines.slice(1).map((line) => {\n    const cols = line.split(\",\");\n    const obj = {};\n    headers.forEach((h, i) => (obj[h] = cols[i] ? cols[i].trim() : \"\"));\n    return obj;\n  });\n}\n\nexport default function DataManagement() {\n  const { org = null } = useOutletContext();\n  const orgId = org?.id || \"anon\";\n\n  const [uploads, setUploads] = useState(() => readUploads());\n  // auto-ingest removed intentionally per your instruction\n  const [templateOpen, setTemplateOpen] = useState(false);\n  const [completionModal, setCompletionModal] = useState({ open: false, uploadId: null, name: '' });\n  const [modal, setModal] = useState({ open: false, title: '', body: '', onConfirm: null });\n  const [dragging, setDragging] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const fileRef = useRef(null);\n\n  // --- DARK MODE DETECTION (fixes the 'darkMode is not defined' error) ---\n  const [darkMode, setDarkMode] = useState(() => {\n    if (typeof window === \"undefined\" || typeof document === \"undefined\") return false;\n    const docHas = document.documentElement.classList.contains(\"dark\");\n    const mq = window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    return docHas || mq;\n  });\n\n  useEffect(() => {\n    if (typeof window === \"undefined\" || typeof document === \"undefined\") return;\n\n    // Observe class changes on <html> so toggles of 'dark' are detected\n    const obs = new MutationObserver(() => {\n      setDarkMode(document.documentElement.classList.contains(\"dark\") || (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches));\n    });\n    obs.observe(document.documentElement, { attributes: true, attributeFilter: [\"class\"] });\n\n    // Also listen for system preference changes\n    const mq = window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\");\n    const mqListener = () => {\n      setDarkMode(document.documentElement.classList.contains(\"dark\") || (mq && mq.matches));\n    };\n    if (mq) {\n      if (typeof mq.addEventListener === \"function\") {\n        mq.addEventListener(\"change\", mqListener);\n      } else if (typeof mq.addListener === \"function\") {\n        mq.addListener(mqListener);\n      }\n    }\n\n    return () => {\n      obs.disconnect();\n      if (mq) {\n        if (typeof mq.removeEventListener === \"function\") {\n          mq.removeEventListener(\"change\", mqListener);\n        } else if (typeof mq.removeListener === \"function\") {\n          mq.removeListener(mqListener);\n        }\n      }\n    };\n  }, []);\n\n  // ------------------------------------------------------------------\n\n  useEffect(() => {\n    writeUploads(uploads);\n  }, [uploads]);\n\n  // Listen for analysis-ready notifications to surface a friendly modal\n  useEffect(() => {\n    function onReady(e) {\n      try {\n        const d = e?.detail || {};\n        setCompletionModal({ open: true, uploadId: d.uploadId || null, name: d.name || 'upload' });\n        try { notifier.sendEmail({ to: (org && org.email) || 'ceo@example.com', subject: `Analysis complete: ${d.name}`, body: `Your upload ${d.name} has completed processing.` }); } catch (e) {}\n      } catch (err) {}\n    }\n    window.addEventListener('conseqx:notifications:updated', onReady);\n    return () => window.removeEventListener('conseqx:notifications:updated', onReady);\n  }, [org]);\n\n  async function onFiles(files) {\n    const f = files[0];\n    if (!f) return;\n    setProcessing(true);\n    setProgress(8);\n\n    const reader = new FileReader();\n    reader.onload = async (ev) => {\n      setProgress(35);\n      const text = ev.target.result;\n      let parsed = null;\n      const nameLower = (f.name || \"\").toLowerCase();\n      const ext = nameLower.includes(\".\") ? nameLower.split(\".\").pop() : \"\";\n\n      const isBinary = BINARY_EXTS.includes(ext) || (f.type && (f.type.startsWith(\"image/\") || f.type === \"application/pdf\"));\n\n      if (isBinary) {\n        parsed = { type: 'binary', filename: f.name, size: f.size };\n      } else if (f.type === \"application/json\" || f.name.endsWith(\".json\")) {\n        try {\n          parsed = JSON.parse(text);\n        } catch (e) {\n          parsed = null;\n        }\n      } else if (f.type.includes(\"csv\") || f.name.endsWith(\".csv\") || f.name.endsWith(\".txt\")) {\n        try {\n          const Papa = await import('papaparse').then(m => m.default || m).catch(() => null);\n          if (Papa && typeof Papa.parse === 'function') {\n            const res = Papa.parse(text, { header: true, skipEmptyLines: true });\n            parsed = res.data;\n          } else {\n            parsed = parseCSV(text);\n          }\n        } catch (e) {\n          parsed = parseCSV(text);\n        }\n      } else if (ext === 'xlsx' || ext === 'xls') {\n        try {\n          const XLSX = await import('xlsx').then(m => m.default || m).catch(() => null);\n          if (XLSX && typeof XLSX.read === 'function') {\n            const wb = XLSX.read(text, { type: 'binary' });\n            const sheetName = wb.SheetNames[0];\n            const ws = wb.Sheets[sheetName];\n            parsed = XLSX.utils.sheet_to_json(ws, { defval: '' });\n          } else {\n            parsed = { type: 'binary', filename: f.name };\n          }\n        } catch (e) {\n          parsed = { type: 'binary', filename: f.name };\n        }\n      } else {\n        const sanitized = String(text || \"\").replace(/[^\t\\n\\r \\x20-\\x7E]/g, \" \");\n        parsed = { type: 'text', filename: f.name, previewText: sanitized.substring(0, 400) };\n      }\n\n      setProgress(65);\n      const valid = parsed && (Array.isArray(parsed) ? parsed.length > 0 : Object.keys(parsed).length > 0);\n\n      function categorizeFile(name = \"\", preview = \"\") {\n        const txt = `${name} ${typeof preview === 'string' ? preview : JSON.stringify(preview)}`.toLowerCase();\n        const map = [\n          [\"interpretation\", [\"finance\", \"revenue\", \"profit\", \"financial\", \"balance\", \"income\", \"expenses\"]],\n          [\"investigation\", [\"survey\", \"feedback\", \"csat\", \"comments\", \"responses\", \"sentiment\", \"log\", \"logs\", \"data\"]],\n          [\"interdependency\", [\"orgchart\", \"org chart\", \"organization chart\", \"hierarchy\", \"reporting\"]],\n          [\"iteration\", [\"cycle\", \"sprint\", \"iteration\", \"lead time\", \"throughput\"]],\n          [\"alignment\", [\"goal\", \"kpi\", \"objective\", \"okr\", \"alignment\"]],\n          [\"illustration\", [\"process\", \"flow\", \"diagram\", \"procedure\", \"manual\", \"presentation\", \"ppt\"]]\n        ];\n        const hits = [];\n        map.forEach(([key, kws]) => {\n          for (const kw of kws) {\n            if (txt.includes(kw)) {\n              hits.push(key);\n              break;\n            }\n          }\n        });\n        return hits.length ? Array.from(new Set(hits)) : [\"investigation\"];\n      }\n\n      const record = {\n        id: `U-${Date.now().toString(36)}`,\n        name: f.name,\n        type: f.type || \"unknown\",\n        timestamp: Date.now(),\n        valid: Boolean(valid),\n        preview: Array.isArray(parsed) ? parsed.slice(0, 3) : parsed,\n        analyzedSystems: [],\n        objectUrl: undefined,\n      };\n\n      if (parsed && parsed.type === 'binary') {\n        try { record.objectUrl = URL.createObjectURL(f); } catch (e) {}\n      }\n\n      // simulate processing time\n      setTimeout(() => {\n        setProgress(100);\n        setProcessing(false);\n        setProgress(0);\n\n        const systems = categorizeFile(f.name, JSON.stringify(record.preview || \"\"));\n        record.analyzedSystems = systems;\n        setUploads((prev) => [record, ...prev]);\n\n        // trigger service assessments (best-effort)\n        systems.forEach(async (sys) => {\n          try { await svc.runAssessment(orgId, sys); } catch (e) { try { console.warn(\"runAssessment failed:\", e); } catch {} }\n        });\n\n        // store diff metadata if prev exists\n        try {\n          const prev = uploads[0];\n          if (prev) {\n            const diffKey = 'conseqx_upload_diffs_v1';\n            const raw = localStorage.getItem(diffKey);\n            const diffs = raw ? JSON.parse(raw) : [];\n            diffs.unshift({ id: `${record.id}-vs-${prev.id}`, left: record.id, right: prev.id, ts: Date.now() });\n            localStorage.setItem(diffKey, JSON.stringify(diffs));\n          }\n        } catch (e) {}\n\n        // notifications for analysis-ready\n        try {\n          const makeNote = (title) => ({ id: `N-${Date.now().toString(36)}`, uploadId: record.id, read: false, title, body: `Analysis ready for ${record.name}`, ts: Date.now(), type: \"upload\" });\n\n          try {\n            const noteKey = \"conseqx_uploads_notifications_v1\";\n            const raw = localStorage.getItem(noteKey);\n            const notes = raw ? JSON.parse(raw) : [];\n            notes.unshift(makeNote(`Analysis ready: ${record.name}`));\n            localStorage.setItem(noteKey, JSON.stringify(notes));\n          } catch (e) {}\n\n          const reportKeys = [\"conseqx_reports_notifications_v3\", \"conseqx_reports_notifications_v1\"];\n          reportKeys.forEach((k) => {\n            try {\n              const raw = localStorage.getItem(k);\n              const notes = raw ? JSON.parse(raw) : [];\n              notes.unshift(makeNote(`Analysis ready: ${record.name}`));\n              localStorage.setItem(k, JSON.stringify(notes));\n            } catch (e) {}\n          });\n\n          try { window.dispatchEvent(new CustomEvent(\"conseqx:notifications:updated\", { detail: { uploadId: record.id, name: record.name } })); } catch (e) {}\n        } catch (e) {}\n      }, 700 + Math.random() * 900);\n    };\n\n    reader.readAsText(f);\n  }\n\n  function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragging(false);\n    const files = e.dataTransfer.files;\n    onFiles(files);\n  }\n\n  function handlePick() {\n    if (fileRef.current) fileRef.current.click();\n  }\n\n  function removeUpload(id) {\n    setUploads((prev) => {\n      const toRemove = prev.find((u) => u.id === id);\n      if (toRemove && toRemove.objectUrl) {\n        try { URL.revokeObjectURL(toRemove.objectUrl); } catch (e) {}\n      }\n      return prev.filter((u) => u.id !== id);\n    });\n  }\n\n  function revertToUpload(id) {\n    setUploads((prev) => {\n      const found = prev.find(u => u.id === id);\n      if (!found) return prev;\n      const rest = prev.filter(u => u.id !== id);\n      return [ { ...found, timestamp: Date.now() }, ...rest ];\n    });\n  }\n\n  function viewDiff(leftId, rightId) {\n    try {\n      const raw = localStorage.getItem('conseqx_upload_diffs_v1');\n      const diffs = raw ? JSON.parse(raw) : [];\n      const d = diffs.find(x => x.id === `${leftId}-vs-${rightId}`) || diffs.find(x => x.left === leftId && x.right === rightId);\n      setModal({ open: true, title: 'Compare uploads', body: d ? `Comparison record created at ${new Date(d.ts).toLocaleString()}` : 'No precomputed diff available for these uploads.', onConfirm: null });\n    } catch (e) { setModal({ open: true, title: 'Compare uploads', body: 'Error reading diffs', onConfirm: null }); }\n  }\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2\">\n        <div>\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Data Management</h2>\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">Manage uploads, validation and processing</div>\n        </div>\n      </div>\n\n      <div className=\"mt-4 grid grid-cols-1 lg:grid-cols-12 gap-6\">\n        {/* left column */}\n        <div className={`lg:col-span-5`}>\n          <div\n            onDragOver={(e) => { e.preventDefault(); setDragging(true); }}\n            onDragLeave={() => setDragging(false)}\n            onDrop={handleDrop}\n            className={`rounded-lg p-6 border-2 border-dashed transition-colors\n              ${dragging ? \"border-blue-500 bg-blue-50/20 dark:bg-blue-900/20\" : \"border-gray-200 bg-white dark:border-gray-700 dark:bg-gray-800\"}`}\n          >\n            <div className={`flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4`}>\n              <div className=\"flex items-center gap-3\">\n                <FaUpload className=\"text-3xl text-gray-600 dark:text-gray-200\" />\n                <div>\n                  <div className=\"font-medium text-gray-900 dark:text-gray-100\">Drag & drop files here</div>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">CSV, JSON, TXT (PDFs as text) — files processed client-side and stored locally for analysis</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                <button onClick={handlePick} className=\"px-3 py-2 rounded-md bg-blue-600 text-white text-sm\">Choose file</button>\n\n                <div className=\"relative\">\n                  <button\n                    onClick={() => setTemplateOpen((s) => !s)}\n                    className=\"px-3 py-2 rounded-md border text-sm bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\"\n                  >\n                    Download template\n                  </button>\n                  {templateOpen && (\n                    <div className=\"absolute right-0 mt-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded shadow p-2 w-56 z-40\">\n                      <a href=\"/sample-data/template-financials.csv\" download className=\"block px-2 py-1 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 rounded\">Financials template</a>\n                      <a href=\"/sample-data/template-survey.csv\" download className=\"block px-2 py-1 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 rounded\">Survey template</a>\n                      <div className=\"mt-2 text-xs text-gray-500 dark:text-gray-400\">Tip: open the CSV and fill rows before upload.</div>\n                    </div>\n                  )}\n                </div>\n\n                <button\n                  onClick={() => {\n                    try {\n                      uploads.forEach((u) => { if (u && u.objectUrl) try { URL.revokeObjectURL(u.objectUrl); } catch (e) {} });\n                    } catch (e) {}\n                    setUploads([]);\n                    writeUploads([]);\n                  }}\n                  className=\"px-3 py-2 rounded-md border text-sm bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\"\n                >\n                  Clear history\n                </button>\n              </div>\n            </div>\n\n            <input ref={fileRef} type=\"file\" className=\"hidden\" onChange={(e) => onFiles(e.target.files)} />\n\n            {processing && (\n              <div className=\"mt-4\">\n                <div className=\"text-sm text-gray-700 dark:text-gray-300\">Validation progress</div>\n                <div className=\"w-full bg-gray-100 dark:bg-gray-700 rounded-full h-3 mt-2 overflow-hidden\">\n                  <div style={{ width: `${progress}%` }} className=\"h-full bg-yellow-500 transition-all\" />\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"mt-6\">\n            <h3 className=\"text-sm font-semibold text-gray-900 dark:text-gray-100\">Reminder Scheduler</h3>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">Set upload reminders. Reminders persist locally and appear under Reports → Reminders.</p>\n            <ReminderScheduler />\n          </div>\n        </div>\n\n        {/* right column */}\n        <div className=\"lg:col-span-7\">\n          <div className=\"rounded-lg p-4 border bg-white dark:bg-gray-800 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Upload history</h3>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">{uploads.length} upload{uploads.length !== 1 ? \"s\" : \"\"}</div>\n            </div>\n\n            <div className=\"mt-3\">\n              {uploads.length === 0 && <div className=\"text-sm text-gray-500 dark:text-gray-400\">No uploads yet. Upload a CSV or JSON to get started.</div>}\n\n              {/* Desktop/tablet view */}\n              {uploads.length > 0 && (\n                <div>\n                  <div className=\"hidden sm:block overflow-x-auto mt-2\">\n                    <table className=\"w-full text-sm min-w-[700px]\">\n                      <thead>\n                        <tr className=\"text-left text-xs text-gray-500 dark:text-gray-400\">\n                          <th className=\"py-2\">Timestamp</th>\n                          <th className=\"py-2\">File</th>\n                          <th className=\"py-2\">Valid</th>\n                          <th className=\"py-2\">Preview</th>\n                          <th className=\"py-2\"></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {uploads.map((u) => (\n                          <tr key={u.id} className=\"border-t align-top border-gray-200 dark:border-gray-700\">\n                            <td className=\"py-2 align-top text-xs text-gray-600 dark:text-gray-300\">{new Date(u.timestamp).toLocaleString()}</td>\n                            <td className=\"py-2 align-top font-medium text-gray-900 dark:text-gray-100\">{u.name}</td>\n                            <td className=\"py-2 align-top text-xs\">{u.valid ? <span className=\"text-green-600\">Yes</span> : <span className=\"text-red-600\">No</span>}</td>\n                            <td className=\"py-2 align-top\">\n                              {u.preview && u.preview.type === 'binary' ? (\n                                <div className=\"text-xs text-gray-800 dark:text-gray-200\">\n                                  <div className=\"font-medium\">{u.preview.filename || u.name}</div>\n                                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">{u.preview.size ? `${u.preview.size} bytes` : 'binary file'}</div>\n                                  {u.objectUrl ? (\n                                    <a className=\"text-xs text-blue-600 dark:text-blue-400 underline mt-1 inline-block\" href={u.objectUrl} download={u.name}>Download</a>\n                                  ) : (\n                                    <div className=\"text-xs text-gray-400 dark:text-gray-500\">Download available while session is open</div>\n                                  )}\n                                </div>\n                              ) : Array.isArray(u.preview) ? (\n                                <div className=\"max-h-40 overflow-auto bg-gray-50 dark:bg-gray-700/40 p-2 rounded text-xs\">\n                                  <table className=\"w-full text-xs\">\n                                    <thead>\n                                      <tr>\n                                        {(Object.keys(u.preview[0] || {}).slice(0,6)).map((h) => (\n                                          <th key={h} className=\"text-left pr-2 text-gray-600 dark:text-gray-300\">{h}</th>\n                                        ))}\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {u.preview.slice(0,3).map((row, idx) => (\n                                        <tr key={idx}>\n                                          {Object.values(row).slice(0,6).map((v, i) => (\n                                            <td key={i} className=\"pr-2 align-top text-gray-800 dark:text-gray-200\">{String(v)}</td>\n                                          ))}\n                                        </tr>\n                                      ))}\n                                    </tbody>\n                                  </table>\n                                </div>\n                              ) : (u.preview && u.preview.type === 'text') ? (\n                                <div className=\"max-h-40 overflow-auto break-words bg-gray-50 dark:bg-gray-700/40 p-2 rounded text-xs whitespace-pre-wrap text-gray-800 dark:text-gray-200\">{u.preview.previewText}</div>\n                              ) : (\n                                <div className=\"max-h-40 overflow-auto bg-gray-50 dark:bg-gray-700/40 p-2 rounded text-xs text-gray-800 dark:text-gray-200\">\n                                  <pre className=\"whitespace-pre-wrap\">{(() => {\n                                    try {\n                                      const s = typeof u.preview === 'string' ? u.preview : JSON.stringify(u.preview || {}, null, 2);\n                                      return s.length > 1000 ? s.slice(0, 1000) + '…' : s;\n                                    } catch (e) { return String(u.preview); }\n                                  })()}</pre>\n                                </div>\n                              )}\n                            </td>\n                            <td className=\"py-2 align-top text-right\">\n                              <div className=\"flex items-center justify-end gap-2\">\n                                <button onClick={() => viewDiff(u.id, uploads[0]?.id)} className=\"px-2 py-1 rounded-md text-xs border bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\">Compare</button>\n                                <button onClick={() => revertToUpload(u.id)} className=\"px-2 py-1 rounded-md text-xs border bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\">Revert</button>\n                                <button onClick={() => removeUpload(u.id)} className=\"px-2 py-1 rounded-md text-xs border text-red-600 bg-white dark:bg-gray-700 dark:text-red-400 border-gray-300 dark:border-gray-600\"><FaTrash className=\"inline mr-1\"/>Remove</button>\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n\n                  {/* Mobile stacked cards */}\n                  <div className=\"sm:hidden mt-2 space-y-3\">\n                    {uploads.map((u) => (\n                      <div key={u.id} className=\"border rounded p-3 bg-white dark:bg-gray-800 dark:border-gray-700\">\n                        <div className=\"flex items-start justify-between gap-2\">\n                          <div className=\"min-w-0\">\n                            <div className=\"font-medium truncate text-gray-900 dark:text-gray-100\">{u.name}</div>\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400\">{new Date(u.timestamp).toLocaleString()}</div>\n                            <div className=\"text-xs mt-2\">{u.valid ? <span className=\"text-green-600\">Valid</span> : <span className=\"text-red-600\">Invalid</span>}</div>\n                          </div>\n                        </div>\n\n                        <div className=\"mt-2 text-xs text-gray-800 dark:text-gray-200\">\n                          {u.preview && u.preview.type === 'binary' ? (\n                            <>\n                              <div className=\"font-medium\">{u.preview.filename || u.name}</div>\n                              <div className=\"text-xs text-gray-500 dark:text-gray-400\">{u.preview.size ? `${u.preview.size} bytes` : 'binary file'}</div>\n                              {u.objectUrl ? <a href={u.objectUrl} download={u.name} className=\"text-xs text-blue-600 dark:text-blue-400 underline\">Download</a> : <div className=\"text-xs text-gray-400 dark:text-gray-500\">Download available while session open</div>}\n                            </>\n                          ) : Array.isArray(u.preview) ? (\n                            <div className=\"max-h-28 overflow-auto bg-gray-50 dark:bg-gray-700/40 p-2 rounded text-xs\">\n                              <pre className=\"whitespace-pre-wrap text-gray-800 dark:text-gray-200\">{JSON.stringify(u.preview.slice(0,2), null, 2)}</pre>\n                            </div>\n                          ) : (u.preview && u.preview.type === 'text') ? (\n                            <div className=\"max-h-28 overflow-auto bg-gray-50 dark:bg-gray-700/40 p-2 rounded text-xs whitespace-pre-wrap text-gray-800 dark:text-gray-200\">{u.preview.previewText}</div>\n                          ) : (\n                            <div className=\"max-h-28 overflow-auto bg-gray-50 dark:bg-gray-700/40 p-2 rounded text-xs text-gray-800 dark:text-gray-200\">\n                              <pre className=\"whitespace-pre-wrap\">{(() => {\n                                try {\n                                  const s = typeof u.preview === 'string' ? u.preview : JSON.stringify(u.preview || {}, null, 2);\n                                  return s.length > 500 ? s.slice(0, 500) + '…' : s;\n                                } catch (e) { return String(u.preview); }\n                              })()}</pre>\n                            </div>\n                          )}\n                        </div>\n\n                        <div className=\"mt-3 flex items-center justify-end gap-2\">\n                          <button onClick={() => viewDiff(u.id, uploads[0]?.id)} className=\"px-2 py-1 rounded-md text-xs border bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\">Compare</button>\n                          <button onClick={() => revertToUpload(u.id)} className=\"px-2 py-1 rounded-md text-xs border bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\">Revert</button>\n                          <button onClick={() => removeUpload(u.id)} className=\"px-2 py-1 rounded-md text-xs border text-red-600 bg-white dark:bg-gray-700 dark:text-red-400 border-gray-300 dark:border-gray-600\"><FaTrash className=\"inline mr-1\"/>Remove</button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* completion modal and generic modal */}\n          <Modal open={completionModal.open} title={completionModal.name ? 'Analysis complete' : 'Analysis ready'} onClose={() => setCompletionModal({ open: false, uploadId: null, name: '' })}>\n            <div className=\"text-sm text-gray-800 dark:text-gray-200\">Analysis for <strong>{completionModal.name}</strong> is complete. Would you like to view the latest upload?</div>\n            <div className=\"mt-4 flex justify-end gap-2\">\n              <button onClick={() => setCompletionModal({ open: false, uploadId: null, name: '' })} className=\"px-3 py-1 border rounded bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\">Later</button>\n              <button onClick={() => {\n                const el = document.querySelector('[data-upload-history]');\n                if (el) el.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                setCompletionModal({ open: false, uploadId: null, name: '' });\n              }} className=\"px-3 py-1 bg-blue-600 text-white rounded\">View</button>\n            </div>\n          </Modal>\n\n          <Modal open={modal.open} title={modal.title} onClose={() => setModal({ open: false, title: '', body: '', onConfirm: null })}>\n            <div className=\"text-sm text-gray-700 dark:text-gray-200\">{modal.body}</div>\n            <div className=\"mt-4 flex justify-end gap-2\">\n              <button onClick={() => setModal({ open: false, title: '', body: '', onConfirm: null })} className=\"px-3 py-1 border rounded bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\">Close</button>\n              {modal.onConfirm && <button onClick={() => { modal.onConfirm(); setModal({ open: false, title: '', body: '', onConfirm: null }); }} className=\"px-3 py-1 bg-red-600 text-white rounded\">Confirm</button>}\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/* --------- ReminderScheduler component (unchanged but responsive + dark-mode friendly) --------- */\nfunction ReminderScheduler() {\n  const [reminders, setReminders] = useState(() => readReminders());\n  const [title, setTitle] = useState(\"\");\n  const [when, setWhen] = useState(() => {\n    const d = new Date();\n    d.setDate(d.getDate() + 1);\n    d.setHours(9, 0, 0, 0);\n    return d.toISOString().slice(0, 16);\n  });\n\n  useEffect(() => writeReminders(reminders), [reminders]);\n\n  const [modal, setModal] = useState({ open: false, title: '', body: '', onConfirm: null });\n\n  function openError(msg) { setModal({ open: true, title: 'Validation', body: msg, onConfirm: null }); }\n\n  function addReminder() {\n    if (!title) return openError('Enter a title for the reminder');\n    const r = { id: `rem-${Date.now().toString(36)}`, title, when: new Date(when).toISOString(), createdAt: Date.now(), done: false };\n    setReminders((s) => [r, ...s]);\n    setTitle(\"\");\n  }\n\n  function toggleDone(id) { setReminders((s) => s.map(r => r.id === id ? { ...r, done: !r.done } : r)); }\n  function deleteReminder(id) {\n    setModal({ open: true, title: 'Delete reminder', body: 'Are you sure you want to delete this reminder?', onConfirm: () => {\n      setReminders((s) => s.filter(r => r.id !== id));\n      setModal({ open: false, title: '', body: '', onConfirm: null });\n    }});\n  }\n\n  const upcoming = reminders.filter(r => !r.done).length;\n\n  return (\n    <div className=\"mt-3\">\n      <div className=\"flex flex-col sm:flex-row items-center gap-2\">\n        <input\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Reminder title\"\n          className=\"flex-1 px-2 py-1 border rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-gray-600\"\n        />\n        <input\n          type=\"datetime-local\"\n          value={when}\n          onChange={(e) => setWhen(e.target.value)}\n          className=\"px-2 py-1 border rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-gray-600\"\n        />\n        <button onClick={addReminder} className=\"px-3 py-1 bg-blue-600 text-white rounded\">Add</button>\n      </div>\n\n      <div className=\"mt-3 text-sm text-gray-600 dark:text-gray-400\">Upcoming reminders: <span className=\"font-semibold text-gray-900 dark:text-gray-100\">{upcoming}</span></div>\n\n      <ul className=\"mt-2 space-y-2\">\n        {reminders.length === 0 && <li className=\"text-xs text-gray-500 dark:text-gray-400\">No reminders yet.</li>}\n        {reminders.map((r) => (\n          <li key={r.id} className=\"flex items-center justify-between gap-2 p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700\">\n            <div>\n              <div className=\"font-medium text-sm text-gray-900 dark:text-gray-100\">{r.title}</div>\n              <div className=\"text-xs text-gray-500 dark:text-gray-400\">{new Date(r.when).toLocaleString()}</div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button onClick={() => toggleDone(r.id)} className={`px-2 py-1 rounded text-xs ${r.done ? 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 dark:text-gray-100'}`}>{r.done ? 'Done' : 'Mark done'}</button>\n              <button onClick={() => deleteReminder(r.id)} className=\"px-2 py-1 text-xs border rounded text-red-600 bg-white dark:bg-gray-700 dark:text-red-400 border-gray-300 dark:border-gray-600\">Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      <Modal open={modal.open} title={modal.title} onClose={() => setModal({ open: false, title: '', body: '', onConfirm: null })}>\n        <div className=\"text-sm text-gray-700 dark:text-gray-200\">{modal.body}</div>\n        <div className=\"mt-4 flex justify-end gap-2\">\n          <button onClick={() => setModal({ open: false, title: '', body: '', onConfirm: null })} className=\"px-3 py-1 border rounded bg-white dark:bg-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-600\">Cancel</button>\n          {modal.onConfirm && <button onClick={modal.onConfirm} className=\"px-3 py-1 bg-red-600 text-white rounded\">Delete</button>}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\n/* Simple Modal used in component (unchanged but dark-aware) */\nfunction Modal({ open, title, children, onClose }) {\n  if (!open) return null;\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n      <div className=\"absolute inset-0 bg-black opacity-40\" onClick={onClose}></div>\n      <div className=\"relative z-10 w-full max-w-md bg-white dark:bg-gray-900 rounded-2xl p-5 shadow-2xl border dark:border-gray-700\">\n        <div className=\"flex items-start justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{title}</h3>\n          <button onClick={onClose} className=\"text-gray-500 dark:text-gray-300\">✕</button>\n        </div>\n        <div className=\"mt-3\">{children}</div>\n      </div>\n    </div>\n  );\n}\n"],"names":["OUTBOX_KEY","readOutbox","raw","localStorage","getItem","JSON","parse","_unused","writeOutbox","arr","setItem","stringify","e","sendEmail","_ref","to","subject","body","out","unshift","id","concat","Date","now","toString","channel","ts","window","dispatchEvent","CustomEvent","detail","Promise","resolve","ok","sendSMS","_ref2","listOutbox","STORAGE_UPLOADS","BINARY_EXTS","STORAGE_REMINDERS","writeUploads","safe","map","u","copy","_objectSpread","objectUrl","_unused2","_unused3","parseCSV","text","lines","split","filter","Boolean","length","headers","h","trim","slice","line","cols","obj","forEach","i","DataManagement","org","useOutletContext","orgId","uploads","setUploads","useState","readUploads","templateOpen","setTemplateOpen","completionModal","setCompletionModal","open","uploadId","name","modal","setModal","title","onConfirm","dragging","setDragging","processing","setProcessing","progress","setProgress","fileRef","useRef","darkMode","setDarkMode","document","docHas","documentElement","classList","contains","mq","matchMedia","matches","async","onFiles","files","f","reader","FileReader","onload","ev","target","result","parsed","nameLower","toLowerCase","ext","includes","pop","type","startsWith","filename","size","endsWith","Papa","then","m","default","catch","header","skipEmptyLines","data","XLSX","read","wb","sheetName","SheetNames","ws","Sheets","utils","sheet_to_json","defval","sanitized","String","replace","previewText","substring","valid","Array","isArray","Object","keys","record","timestamp","preview","analyzedSystems","undefined","URL","createObjectURL","setTimeout","systems","arguments","txt","hits","key","kws","kw","push","from","Set","categorizeFile","prev","svc","sys","console","warn","_unused6","diffKey","diffs","left","right","makeNote","noteKey","notes","k","Math","random","readAsText","removeUpload","toRemove","find","revokeObjectURL","revertToUpload","found","rest","viewDiff","leftId","rightId","d","x","toLocaleString","useEffect","obs","MutationObserver","observe","attributes","attributeFilter","mqListener","addEventListener","addListener","disconnect","removeEventListener","removeListener","onReady","notifier","email","err","_jsxs","className","children","_jsx","onDragOver","preventDefault","onDragLeave","onDrop","stopPropagation","dataTransfer","FaUpload","onClick","current","click","s","href","download","ref","onChange","style","width","ReminderScheduler","row","idx","values","v","_uploads$","FaTrash","_Fragment","_uploads$2","Modal","onClose","el","querySelector","scrollIntoView","behavior","block","reminders","setReminders","_unused4","readReminders","setTitle","when","setWhen","setDate","getDate","setHours","toISOString","_unused5","writeReminders","upcoming","r","done","value","placeholder","createdAt","toggleDone","deleteReminder"],"sourceRoot":""}