{"version":3,"file":"static/js/970.f441495b.chunk.js","mappings":"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","sources":["pages/CEO_Dashboard/CEODashboardComponents/PartnerDashboard/SystemDeepDive.js"],"sourcesContent":["import React from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\n\nconst SYSTEM_KEYS = ['interdependency','iteration','investigation','interpretation','illustration','inlignment'];\n\nfunction SimpleDependencyMap({ systems, scores }) {\n  // place nodes in a circle and draw simple links between sequential systems\n  const size = 300;\n  const cx = size / 2;\n  const cy = size / 2;\n  const r = 100;\n  return (\n    <svg width={size} height={size} className=\"block mx-auto\">\n      {systems.map((s, i) => {\n        const angle = (i / systems.length) * Math.PI * 2 - Math.PI / 2;\n        const x = cx + r * Math.cos(angle);\n        const y = cy + r * Math.sin(angle);\n        return (\n          <g key={s.key} transform={`translate(${x},${y})`}>\n            <circle r={20} fill={scores[s.key] >= 70 ? '#10B981' : scores[s.key] >= 50 ? '#FBBF24' : '#EF4444'} stroke=\"#111\" strokeOpacity={0.06} />\n            <text x={0} y={5} textAnchor=\"middle\" fontSize={9} fill=\"#fff\">{s.title.slice(0,2)}</text>\n          </g>\n        );\n      })}\n      {/* draw links */}\n      {systems.map((s, i) => {\n        const a1 = (i / systems.length) * Math.PI * 2 - Math.PI / 2;\n        const a2 = (((i+1) % systems.length) / systems.length) * Math.PI * 2 - Math.PI / 2;\n        const x1 = cx + r * Math.cos(a1);\n        const y1 = cy + r * Math.sin(a1);\n        const x2 = cx + r * Math.cos(a2);\n        const y2 = cy + r * Math.sin(a2);\n        return <line key={`l${i}`} x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"#94A3B8\" strokeWidth={1} strokeOpacity={0.6} />;\n      })}\n    </svg>\n  );\n}\n\nfunction RootCauseTree({ rootCauses }) {\n  const [openIds, setOpenIds] = React.useState({});\n  return (\n    <div className=\"space-y-2\">\n      {rootCauses.map((r) => (\n        <div key={r.id}>\n          <button onClick={() => setOpenIds((s)=> ({...s, [r.id]: !s[r.id]}))} className=\"w-full text-left p-2 border rounded\">\n            <div className=\"flex justify-between items-center\"><div className=\"font-medium\">{r.title}</div><div className=\"text-xs text-gray-500\">{r.impact}</div></div>\n          </button>\n          {openIds[r.id] && (\n            <div className=\"ml-3 mt-1 text-sm text-gray-600\">\n              <ul className=\"list-disc list-inside\">\n                {r.causes.map((c, idx) => <li key={idx}>{c}</li>)}\n              </ul>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function SystemDeepDive() {\n  const outlet = useOutletContext();\n  const darkMode = outlet?.darkMode ?? false;\n\n  const [overview, setOverview] = React.useState(null);\n\n  React.useEffect(() => {\n    let mounted = true;\n\n    function makeSeriesFromBase(base, tsBase = Date.now()) {\n      const arr = [];\n      for (let i = 6; i >= 0; i--) {\n        const ts = tsBase - i * 24 * 3600 * 1000;\n        const v = Math.max(5, Math.min(95, base + Math.floor((Math.random() - 0.5) * 6)));\n        arr.push({ ts, value: v });\n      }\n      return arr;\n    }\n\n    async function load() {\n      try {\n        const raw = localStorage.getItem('conseqx_uploads_v1');\n        const uploads = raw ? JSON.parse(raw) : [];\n        if (uploads && uploads.length) {\n          const latest = uploads[0];\n          const byAssessRaw = localStorage.getItem('conseqx_assessments_v1');\n          const byOrg = byAssessRaw ? JSON.parse(byAssessRaw) : {};\n          const assessments = (byOrg['anon'] || []).reduce((acc, a) => { const k = a.systemId || a.system || a.systemKey; if (k) acc[k] = a.score || acc[k] || 0; return acc; }, {});\n\n          const scoresLocal = SYSTEM_KEYS.reduce((acc, k) => {\n            if (assessments[k]) acc[k] = Math.round(Math.max(0, Math.min(100, assessments[k])));\n            else if (Array.isArray(latest.analyzedSystems) && latest.analyzedSystems.includes(k)) acc[k] = 70;\n            else acc[k] = 50;\n            return acc;\n          }, {});\n\n          if (!mounted) return;\n          setOverview({ scores: scoresLocal, perSystemSeries: SYSTEM_KEYS.reduce((a,k)=>{ a[k]=makeSeriesFromBase(scoresLocal[k]||50, latest.timestamp||Date.now()); return a; }, {}) });\n          return;\n        }\n\n        // fallback to API\n        const res = await fetch('http://localhost:4001/api/overview');\n        const json = await res.json();\n        if (!mounted) return;\n        setOverview(json);\n      } catch (e) {\n        // ignore — overview remains null and placeholders will render\n      }\n    }\n\n    load();\n\n    function onStorage(e) { if (!e.key || e.key === 'conseqx_uploads_v1' || e.key === 'conseqx_assessments_v1') load(); }\n    window.addEventListener('storage', onStorage);\n    let bc;\n    try { if (typeof BroadcastChannel !== 'undefined') { bc = new BroadcastChannel('conseqx_assessments'); bc.addEventListener('message', (ev)=> { if (ev?.data?.type === 'assessments:update') load(); }); } } catch {}\n\n    return () => { mounted = false; window.removeEventListener('storage', onStorage); if (bc) try { bc.close(); } catch {} };\n  }, []);\n\n  const scores = overview?.scores || SYSTEM_KEYS.reduce((a,k)=> (a[k]=50,a), {});\n  const perSystemSeries = overview?.perSystemSeries || {};\n\n  // build simple root causes from low-scoring systems\n  const rootCauses = Object.keys(scores).map((k, idx) => ({\n    id: k,\n    title: k,\n    impact: scores[k] >= 70 ? 'low' : scores[k] >= 50 ? 'medium' : 'high',\n    causes: [`Low metric in ${k}`, 'Process gap', 'Ownership unclear']\n  })).filter(r => r);\n\n  const iterationSeries = (perSystemSeries['iteration'] || []).map(d => ({ date: new Date(d.ts), value: d.value }));\n\n  return (\n    <div>\n      <h3 className={`text-lg font-semibold ${darkMode ? 'text-gray-100': 'text-gray-900'}`}>System Deep Dive</h3>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n        <div className={`rounded-2xl p-4 ${darkMode? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-100'}`}>\n          <div className=\"font-semibold\">Dependency Map</div>\n          <div className=\"mt-3 text-xs text-gray-400\">Interactive network graph (simple layout). Click nodes for more details in future iterations.</div>\n          <div className=\"mt-4 h-64 border rounded bg-black/5 flex items-center justify-center\">\n            <SimpleDependencyMap systems={SYSTEM_KEYS.map(k => ({ key: k, title: k }))} scores={scores} />\n          </div>\n        </div>\n\n        <div className={`rounded-2xl p-4 ${darkMode? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-100'}`}>\n          <div className=\"font-semibold\">Iteration Trend Chart</div>\n          <div className=\"mt-3 h-48 border rounded p-2\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={iterationSeries} margin={{ top: 0, right: 8, left: 0, bottom: 0 }}>\n                <XAxis dataKey=\"date\" tickFormatter={(d)=> new Date(d).toLocaleDateString()} />\n                <YAxis domain={[0,100]} />\n                <Tooltip labelFormatter={(l)=> l ? new Date(l).toLocaleString() : ''} formatter={(v)=> `${v}%`} />\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#60A5FA\" strokeWidth={2} dot={false} />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        <div className={`rounded-2xl p-4 ${darkMode? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-100'}`}>\n          <div className=\"font-semibold\">Root Cause Tree</div>\n          <div className=\"mt-3 text-xs text-gray-400\">Expandable root cause list generated from current data.</div>\n          <div className=\"mt-4 h-48 border rounded p-2 overflow-auto\">\n            <RootCauseTree rootCauses={rootCauses} />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\n        <div className={`rounded-2xl p-4 ${darkMode? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-100'}`}>\n          <div className=\"font-semibold\">Narrative Insights</div>\n          <div className=\"mt-3 text-xs text-gray-400\">AI-generated summaries (synthetic):</div>\n          <div className=\"mt-3 space-y-2\">\n            <div className=\"p-3 rounded border\">Based on recent uploads, the highest risk areas are {Object.keys(scores).filter(k=>scores[k]<50).join(', ') || 'none'}. Recommend targeted sprints to address ownership and measurement.</div>\n          </div>\n        </div>\n\n        <div className={`rounded-2xl p-4 ${darkMode? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-100'}`}>\n          <div className=\"font-semibold\">Alignment Heatmap</div>\n          <div className=\"mt-3 h-48 border rounded p-2\">\n            <div className=\"grid grid-cols-3 gap-2\">\n              {Object.keys(scores).map((k) => (\n                <div key={k} className=\"p-2 rounded flex flex-col items-center\">\n                  <div className={`w-12 h-12 rounded-full flex items-center justify-center text-white ${scores[k] >= 70 ? 'bg-green-500' : scores[k] >= 50 ? 'bg-yellow-500' : 'bg-red-500'}`}>{scores[k]}%</div>\n                  <div className=\"text-xs mt-2\">{k}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["SYSTEM_KEYS","SimpleDependencyMap","_ref","systems","scores","size","r","_jsxs","width","height","className","children","map","s","i","angle","length","Math","PI","x","cos","y","sin","transform","concat","_jsx","fill","key","stroke","strokeOpacity","textAnchor","fontSize","title","slice","a1","a2","x1","y1","x2","y2","strokeWidth","RootCauseTree","_ref2","rootCauses","openIds","setOpenIds","React","onClick","_objectSpread","id","impact","causes","c","idx","SystemDeepDive","_outlet$darkMode","outlet","useOutletContext","darkMode","overview","setOverview","bc","mounted","async","load","raw","localStorage","getItem","uploads","JSON","parse","latest","byAssessRaw","assessments","reduce","acc","a","k","systemId","system","systemKey","score","scoresLocal","round","max","min","Array","isArray","analyzedSystems","includes","perSystemSeries","base","tsBase","arguments","undefined","Date","now","arr","ts","v","floor","random","push","value","makeSeriesFromBase","timestamp","res","fetch","json","e","onStorage","window","addEventListener","BroadcastChannel","ev","_ev$data","data","type","_unused","removeEventListener","close","_unused2","Object","keys","filter","iterationSeries","d","date","ResponsiveContainer","LineChart","margin","top","right","left","bottom","XAxis","dataKey","tickFormatter","toLocaleDateString","YAxis","domain","Tooltip","labelFormatter","l","toLocaleString","formatter","Line","dot","join"],"sourceRoot":""}